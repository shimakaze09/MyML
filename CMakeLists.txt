# Define cmake minimum version
CMAKE_MINIMUM_REQUIRED(VERSION 3.20 FATAL_ERROR)

# Project settings
PROJECT(MyML VERSION 0.5.0 LANGUAGES CXX)
MESSAGE(STATUS "Project: ${PROJECT_NAME} ${PROJECT_VERSION}")

# Add 'd' to the end of the lib and dll names in debug mode
SET(CMAKE_DEBUG_POSTFIX d)

# Check C++ version
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED True)

IF (MSVC)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /permissive-")
ENDIF ()

# Set the output directories
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/build/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_SOURCE_DIR}/build/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/build/bin")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/build/lib")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${PROJECT_SOURCE_DIR}/build/lib")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/build/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/build/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${PROJECT_SOURCE_DIR}/build/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/build/lib")

# Turn on VS folders
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

INCLUDE(FETCHCONTENT)
MESSAGE(STATUS "Finding package: MyCMake v0.4.1")
FIND_PACKAGE(MyCMake 0.4.1 EXACT QUIET)
IF (${MyCMake_FOUND})
    MESSAGE(STATUS "MyCMake found")
ELSE ()
    SET(ADDRESS "https://github.com/shimakaze09/MyCMake.git")
    MESSAGE(STATUS "MyCMake not found")
    FETCHCONTENT_DECLARE(
            MyCMake
            GIT_REPOSITORY ${ADDRESS}
            GIT_TAG "v0.4.1"
    )
    MESSAGE(STATUS "MyCMake fetched")
    FETCHCONTENT_MAKEAVAILABLE(MyCMake)
    MESSAGE(STATUS "MyCMake built")
ENDIF ()

# Set the default install prefix
INIT_INSTALL_PREFIX()

# Build test
INIT_TEST_SWITCH()
# SET(BUILD_TEST ON)

FIND_PACKAGE(xsimd)
IF (TARGET xsimd)
    MESSAGE(STATUS "xsimd_FOUND: ${xsimd_FOUND}")
    message(STATUS "xsimd_DIR: ${xsimd_DIR}")
ENDIF ()
SET(INIT_TAIL "FIND_PACKAGE(xsimd)")

ADD_SUB_DIRS_REC(src)

ADD_NATVIS()

EXPORT_TARGETS(DIRECTORIES "include" INIT_TAIL ${INIT_TAIL})